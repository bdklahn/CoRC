% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/entity_accessors.R
\name{setGlobalQuantities}
\alias{setGlobalQuantities}
\title{Set global quantities}
\usage{
setGlobalQuantities(key = NULL, name = NULL, type = NULL, unit = NULL,
  initial_value = NULL, initial_expression = NULL, expression = NULL,
  data = NULL, model = getCurrentModel())
}
\arguments{
\item{key}{Identify which global quantity to edit by specifying it's key, as string.
Also supports fragments of keys, if uniquely matching one global quantity.}

\item{name}{Name to set, as string.}

\item{type}{Type ("fixed", "assignment", "ode") to set, as string.}

\item{unit}{Unit to set, as string.}

\item{initial_value}{Initial value to set, as numeric.}

\item{initial_expression}{Initial expression to set, as string, finite numeric, or logical.}

\item{expression}{Expression to set, as string, finite numeric, or logical.}

\item{data}{A data frame as given by \code{\link{getGlobalQuantities}} which will be applied before the other arguments.}

\item{model}{A model object.}
}
\description{
\code{setGlobalQuantities} applies given values to global quantities of the model depending on the \code{key} argument.
}
\details{
Use the \code{key} argument to specify which global quantity to modify and any of the other arguments to specify the value to set.
The function is fully vectorized.
If a \code{NA} value is supplied, the model value is kept unchanged.

The \href{https://jpahle.github.io/CoRC/articles/entity_management.html}{online article on managing model entities} provides some further context.
}
\seealso{
\code{\link{getGlobalQuantities}} \code{\link{getGlobalQuantityReferences}}

Other global quantity functions: \code{\link{deleteGlobalQuantity}},
  \code{\link{entity_finders}},
  \code{\link{getGlobalQuantities}},
  \code{\link{getGlobalQuantityReferences}},
  \code{\link{newGlobalQuantity}}
}
\concept{global quantity functions}
