% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/entity_accessors.R
\name{setEvents}
\alias{setEvents}
\title{Set events}
\usage{
setEvents(key = NULL, name = NULL, trigger_expression = NULL,
  fire_at_initial_time = NULL, trigger_must_remain_true = NULL,
  priority_expression = NULL, delayed = NULL, delay_expression = NULL,
  assignment_target = NULL, assignment_expression = NULL, data = NULL,
  model = getCurrentModel())
}
\arguments{
\item{key}{Identify which event to edit by specifying it's key, as string.
Also supports fragments of keys, if uniquely matching one event.}

\item{name}{Name to set, as string.}

\item{trigger_expression}{Trigger expression to set, as string, finite numeric, or logical.}

\item{fire_at_initial_time}{Whether to fire at initial time if true, as logical.}

\item{trigger_must_remain_true}{Whether the trigger must remain true, as logical.}

\item{priority_expression}{Priority expression to set, as string, finite numeric, or logical.}

\item{delayed}{Whether the event assignment and / or calculation is to be delayed ("no", "assignment", "calculation"), as string.}

\item{delay_expression}{Delay expression to set, as string, finite numeric, or logical.}

\item{assignment_target}{List of assignment target entities (species, compartments, global quantities) per event to set, as list containing strings.}

\item{assignment_expression}{List of assignment expressions per event to set, as list containing string, finite numeric, or logical.}

\item{data}{A data frame as given by \code{\link{getEvents}} which will be applied before the other arguments.}

\item{model}{A model object.}
}
\description{
\code{setEvents} applies given values to events of the model depending on the \code{key} argument.
}
\details{
Use the \code{key} argument to specify which event to modify and any of the other arguments to specify the value to set.
The function is fully vectorized.
If a \code{NA} value is supplied, the model value is kept unchanged.

The \href{https://jpahle.github.io/CoRC/articles/entity_management.html}{online article on managing model entities} provides some further context.
}
\seealso{
\code{\link{getEvents}}

Other event functions: \code{\link{deleteEvent}},
  \code{\link{entity_finders}}, \code{\link{getEvents}},
  \code{\link{newEvent}}
}
\concept{event functions}
